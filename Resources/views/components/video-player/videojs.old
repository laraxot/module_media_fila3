<video id="my-video" class="video-js vjs-default-skin" controls preload="none" {{-- poster="MY_VIDEO_POSTER.jpg"  data-setup="{}" --}}>
    <source src="{{ $mp4Src }}" type="video/mp4" />
    <source src="MY_VIDEO.webm" type="video/webm" />
    <p class="vjs-no-js">
        To view this video please enable JavaScript, and consider upgrading to a
        web browser that
        <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5 video</a>
    </p>
</video>



@push('styles')
    {{-- <link href="https://vjs.zencdn.net/7.17.0/video-js.css" rel="stylesheet" />

    <!-- City -->
    <link href="https://unpkg.com/@videojs/themes@1/dist/city/index.css" rel="stylesheet">

    <!-- Fantasy -->
    <link href="https://unpkg.com/@videojs/themes@1/dist/fantasy/index.css" rel="stylesheet">

    <!-- Forest -->
    <link href="https://unpkg.com/@videojs/themes@1/dist/forest/index.css" rel="stylesheet">

    <!-- Sea -->
    <link href="https://unpkg.com/@videojs/themes@1/dist/sea/index.css" rel="stylesheet"> --}}
@endpush
@push('scripts')
    {{-- <script src="https://vjs.zencdn.net/7.17.0/video.min.js"></script> --}}
    <script>
        var myPlayer = videojs('my-video', {
            controls: true,
            autoplay: false,
            preload: "auto",
            fluid: true
        });
        myPlayer.addClass('vjs-theme-city');

        if ($ == undefined) {
            $ = jQuery.noConflict();
        }
        myPlayer.ready(function() {
            myPlayer.currentTime({{ $currentTime }});
            // get the current time, should be 120 seconds
            var whereYouAt = myPlayer.currentTime();
            $('.subitem').on('click', function() {
                $this = $(this);
                var time = $this.data('start');
                //console.log(time);
                myPlayer.currentTime(time);
                console.log(myPlayer);

            });
        });

        //myPlayer.on('pause', function() {

        // Modals are temporary by default. They dispose themselves when they are
        // closed; so, we can create a new one each time the player is paused and
        // not worry about leaving extra nodes hanging around.
        //    var modal = myPlayer.createModal('This is a modal!');
        //});
    </script>
@endpush
